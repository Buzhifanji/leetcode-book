import{_ as p}from"./plugin-vue_export-helper.21dcd24c.js";import{o,c,a as n,b as e,d as t,e as s,r as l}from"./app.4e7a72a3.js";var i="/leetcode-book/imgs/PascalTriangleAnimated2.gif";const r={},u=t('<h2 id="\u9898\u76EE" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE" aria-hidden="true">#</a> \u9898\u76EE</h2><p>\u7ED9\u5B9A\u4E00\u4E2A\u975E\u8D1F\u6574\u6570 numRows\uFF0C\u751F\u6210\u300C\u6768\u8F89\u4E09\u89D2\u300D\u7684\u524D numRows \u884C\u3002</p><p>\u5728\u300C\u6768\u8F89\u4E09\u89D2\u300D\u4E2D\uFF0C\u6BCF\u4E2A\u6570\u662F\u5B83\u5DE6\u4E0A\u65B9\u548C\u53F3\u4E0A\u65B9\u7684\u6570\u7684\u548C\u3002</p><p><img src="'+i+'" alt="\u6768\u8F89\u4E09\u89D2" loading="lazy"></p><p><strong>\u4F8B\u5B50</strong></p><div class="custom-container tip"><p class="custom-container-title">\u63D0\u793A</p><p>\u8F93\u5165\uFF1AnumRows = 5</p><p>\u8F93\u51FA\uFF1A[[1],[1,1],[1,2,1],[1,3,3,1],[1,4,6,4,1]]</p></div><h2 id="\u9898\u76EE\u94FE\u63A5" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE\u94FE\u63A5" aria-hidden="true">#</a> \u9898\u76EE\u94FE\u63A5</h2>',7),d={href:"https://leetcode.cn/problems/pascals-triangle/",target:"_blank",rel:"noopener noreferrer"},k=s("https://leetcode.cn/problems/pascals-triangle/"),m=n("h2",{id:"\u9898\u76EE\u5927\u610F",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u9898\u76EE\u5927\u610F","aria-hidden":"true"},"#"),s(" \u9898\u76EE\u5927\u610F")],-1),h=s("\u7528\u4E00\u4E2A\u4E8C\u7EF4\u6570\u7EC4\u8868\u793A"),v={href:"https://zh.m.wikipedia.org/zh-hans/%E6%9D%A8%E8%BE%89%E4%B8%89%E8%A7%92%E5%BD%A2",target:"_blank",rel:"noopener noreferrer"},b=s("\u6768\u8F89\u4E09\u89D2\u5F62"),_=t(`<h2 id="\u89E3\u9898\u601D\u8DEF" tabindex="-1"><a class="header-anchor" href="#\u89E3\u9898\u601D\u8DEF" aria-hidden="true">#</a> \u89E3\u9898\u601D\u8DEF</h2><p>\u8FD9\u5230\u9898\u4E3B\u8981\u7406\u89E3<code>\u6768\u8F89\u4E09\u89D2\u5F62</code>\u7684\u89C4\u5F8B\uFF0C\u9996\u5148\u9700\u8981\u77E5\u9053\uFF0C\u884C\u6570\u548C\u5143\u7D20\u7684\u5173\u7CFB\uFF1A\u884C\u6570\u548C\u5143\u7D20\u4E2A\u6570\u76F8\u7B49\u3002</p><p>\u5176\u6B21\uFF0C\u6BCF\u4E00\u884C\u4E2D\u7684\u5143\u7D20\uFF0C\u9996\u4F4D\u4E3A<code>1</code>\uFF0C\u5176\u5B83\u5143\u7D20\u7D22\u5F15<code>i</code>\u5BF9\u5E94\u7684\u503C\u7531\u4E0A\u4E00\u884C\u7D22\u5F15\u503C<code>i</code>\u548C<code>i - 1</code>\u5BF9\u5E94\u503C\u7684\u548C\u751F\u6210\u7684\u3002</p><h2 id="\u4EE3\u7801" tabindex="-1"><a class="header-anchor" href="#\u4EE3\u7801" aria-hidden="true">#</a> \u4EE3\u7801</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token parameter">numRows</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span>
 */</span>
<span class="token keyword">var</span> <span class="token function-variable function">generate</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">numRows</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> numRows<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> cur <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> prev <span class="token operator">=</span> result<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> i<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      cur<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> prev<span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> prev<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>cur<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5);function f(w,g){const a=l("ExternalLinkIcon");return o(),c("div",null,[u,n("p",null,[n("a",d,[k,e(a)])]),m,n("p",null,[h,n("a",v,[b,e(a)])]),_])}var j=p(r,[["render",f],["__file","118.pascals-triangle.html.vue"]]);export{j as default};
