const e=JSON.parse('{"key":"v-45edc85c","path":"/array/88.merge-sorted-array.html","title":"88.合并两个有序数组(merge-sorted-array)","lang":"zh-CN","frontmatter":{"title":"88.合并两个有序数组(merge-sorted-array)","date":"2020-08-23T14:18:00.000Z","category":["数组"],"tag":["数组","双指针"]},"headers":[{"level":2,"title":"题目","slug":"题目","link":"#题目","children":[]},{"level":2,"title":"题目链接","slug":"题目链接","link":"#题目链接","children":[]},{"level":2,"title":"题目大意","slug":"题目大意","link":"#题目大意","children":[]},{"level":2,"title":"解题思路","slug":"解题思路","link":"#解题思路","children":[]},{"level":2,"title":"代码","slug":"代码","link":"#代码","children":[]}],"git":{"createdTime":1661237572000,"updatedTime":1661237572000,"contributors":[{"name":"huangbin","email":"1127779503@qq.com","commits":1}]},"readingTime":{"minutes":1.56,"words":468},"filePathRelative":"array/88.merge-sorted-array.md","localizedDate":"2020年8月23日","excerpt":"<h2> 题目</h2>\\n<p>给你两个按 <strong>非递减顺序</strong>排列的整数数组&nbsp;<code>nums1</code> 和 <code>nums2</code>，另有两个整数 <code>m</code> 和 <code>n</code> ，分别表示 <code>nums1</code> 和 <code>nums2</code> 中的元素数目。</p>\\n<p>请你 合并 <code>nums2</code> 到 <code>nums1</code> 中，使合并后的数组同样按 <strong>非递减顺序</strong> 排列。</p>\\n<p>注意：最终，合并后数组不应由函数返回，而是存储在数组 <code>nums1</code> 中。为了应对这种情况，<code>nums1</code> 的初始长度为 <code>m + n</code>，其中前 <code>m</code> 个元素表示应合并的元素，后 <code>n</code> 个元素为 <code>0</code> ，应忽略。<code>nums2</code> 的长度为 <code>n</code> 。</p>"}');export{e as data};
