import{_ as p}from"./plugin-vue_export-helper.21dcd24c.js";import{o as t,c as e,a as n,b as o,d as s,e as c,r as u}from"./app.8656a241.js";const l={},i=s('<h2 id="\u9898\u76EE" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE" aria-hidden="true">#</a> \u9898\u76EE</h2><p>\u7ED9\u5B9A\u4E00\u4E2A\u6574\u6570\u6570\u7EC4 nums\xA0\u548C\u4E00\u4E2A\u6574\u6570\u76EE\u6807\u503C target\uFF0C\u8BF7\u4F60\u5728\u8BE5\u6570\u7EC4\u4E2D\u627E\u51FA \u548C\u4E3A\u76EE\u6807\u503C target\xA0 \u7684\u90A3\xA0\u4E24\u4E2A\xA0\u6574\u6570\uFF0C\u5E76\u8FD4\u56DE\u5B83\u4EEC\u7684\u6570\u7EC4\u4E0B\u6807\u3002\u4F60\u53EF\u4EE5\u5047\u8BBE\u6BCF\u79CD\u8F93\u5165\u53EA\u4F1A\u5BF9\u5E94\u4E00\u4E2A\u7B54\u6848\u3002\u4F46\u662F\uFF0C\u6570\u7EC4\u4E2D\u540C\u4E00\u4E2A\u5143\u7D20\u5728\u7B54\u6848\u91CC\u4E0D\u80FD\u91CD\u590D\u51FA\u73B0\u3002 \u4F60\u53EF\u4EE5\u6309\u4EFB\u610F\u987A\u5E8F\u8FD4\u56DE\u7B54\u6848\u3002</p><p><strong>\u4F8B\u5B50</strong></p><div class="custom-container tip"><p class="custom-container-title">\u63D0\u793A</p><p>\u8F93\u5165\uFF1Anums = [2,7,11,15], target = 9</p><p>\u8F93\u51FA\uFF1A[0,1]</p><p>\u89E3\u91CA\uFF1A\u56E0\u4E3A nums[0] + nums[1] == 9 \uFF0C\u8FD4\u56DE [0, 1] \u3002</p></div><h2 id="\u9898\u76EE\u94FE\u63A5" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE\u94FE\u63A5" aria-hidden="true">#</a> \u9898\u76EE\u94FE\u63A5</h2>',5),r={href:"https://leetcode.cn/problems/two-sum/",target:"_blank",rel:"noopener noreferrer"},k=c("https://leetcode.cn/problems/two-sum/"),d=s(`<h2 id="\u9898\u76EE\u5927\u610F" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE\u5927\u610F" aria-hidden="true">#</a> \u9898\u76EE\u5927\u610F</h2><p>\u5728\u6570\u7EC4\u4E2D\u627E\u5230\u4E24\u4E2A\u6811\u4E4B\u548C\u7B49\u4E8E\u7ED9\u5B9A\u503C\u7684\u6570\u5B57\uFF0C\u7ED3\u679C\u8FD4\u56DE\u8FD9\u4E24\u4E2A\u6570\u5B57\u7684\u4E0B\u6807</p><h2 id="\u89E3\u9898\u601D\u8DEF" tabindex="-1"><a class="header-anchor" href="#\u89E3\u9898\u601D\u8DEF" aria-hidden="true">#</a> \u89E3\u9898\u601D\u8DEF</h2><p>\u8FD9\u9053\u9898\u5982\u679C\u901A\u8FC7\u66B4\u529B\u904D\u5386\u7684\u8BDD\uFF0C\u4E5F\u662F\u5F88\u5BB9\u6613\u89E3\u51B3\uFF0C\u4F46\u662F\u65F6\u95F4\u590D\u6742\u5EA6<code>O(n2)</code></p><p>\u7531\u4E8E<strong>\u54C8\u5E0C\u8868</strong>\u67E5\u627E\u7684\u65F6\u95F4\u590D\u6742\u5EA6\u4E3A<code>O(1)</code>\uFF0C\u6240\u4EE5\u53EF\u4EE5\u5229\u7528<strong>\u54C8\u5E0C\u8868</strong><code>Map</code>\u6765\u964D\u4F4E\u65F6\u95F4\u590D\u6742\u5EA6</p><p>\u5148\u904D\u5386\u6570\u7EC4<code>nums</code>\uFF0C\u628A\u6570\u7EC4\u7528<strong>\u54C8\u5E0C\u8868</strong><code>Map</code>\u5B58\u50A8\u8D77\u6765</p><p>\u7136\u540E\u904D\u5386\u6570\u7EC4<code>nums</code>\uFF0C\u5224\u65AD<code>target</code>\u51CF\u53BB\u5F53\u524D\u5143\u7D20\u7684\u5DEE\u662F\u5426\u5728<strong>\u54C8\u5E0C\u8868</strong><code>Map</code>\u627E\u5230\uFF0C\u5982\u679C\u627E\u5230\u5C31\u8FD4\u56DE\uFF0C\u53CD\u4E4B\u7EE7\u7EED\u904D\u5386\u3002</p><h2 id="\u4EE3\u7801" tabindex="-1"><a class="header-anchor" href="#\u4EE3\u7801" aria-hidden="true">#</a> \u4EE3\u7801</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span> <span class="token parameter">nums</span>
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token parameter">target</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span>
 */</span>
<span class="token keyword">var</span> <span class="token function-variable function">twoSum</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">nums<span class="token punctuation">,</span> target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> n <span class="token operator">=</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token comment">// \u6570\u7EC4\u8F6C\u54C8\u5E0C\u8868</span>
  <span class="token keyword">const</span> num_map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    num_map<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> temp <span class="token operator">=</span> target <span class="token operator">-</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>num_map<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>temp<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> j <span class="token operator">=</span> num_map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>temp<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// \u8FC7\u6EE4\u81EA\u5DF1</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">!==</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
        result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u4F18\u5316\u54C8\u5E0C\u8868" tabindex="-1"><a class="header-anchor" href="#\u4F18\u5316\u54C8\u5E0C\u8868" aria-hidden="true">#</a> \u4F18\u5316\u54C8\u5E0C\u8868</h2><p>\u4E0A\u9762\u7684\u4EE3\u7801\u5B9E\u73B0\u662F\u5148\u628A\u6570\u7EC4\u8F6C\u6362\u54C8\u5E0C\u8868\uFF0C\u7136\u540E\u901A\u8FC7\u904D\u5386\u5339\u914D\u5143\u7D20\uFF0C\u8FD9\u6837\u505A\u7A7A\u95F4\u590D\u6742\u5EA6\u6700\u597D\u548C\u6700\u574F\u90FD\u662F <code>O(n)</code>\u3002</p><p>\u867D\u7136\u6700\u574F\u65F6\u95F4\u590D\u6742\u5EA6\u4F18\u5316\u4E0D\u4E86\uFF0C\u4F46\u662F\u53EF\u4EE5\u4F18\u5316\u6700\u574F\u65F6\u95F4\u590D\u6742\u3002\u6BD4\u5982\u6700\u524D\u9762\u5C31\u6EE1\u8DB3\u6761\u4EF6\u7684\u65F6\u5019\uFF0C\u5C31\u6CA1\u6709\u5FC5\u8981\u628A\u540E\u9762\u7684\u5143\u7D20\u7684\u8F6C\u6362\u6210\u54C8\u5E0C\u8868\u4E86\u3002</p><p>\u4F18\u5316\u601D\u8DEF\uFF1A</p><ul><li>\u5B9A\u4E49\u4E00\u4E2A\u7A7A\u7684<strong>\u54C8\u5E0C\u8868</strong><code>Map</code></li><li>\u904D\u5386\u6570\u7EC4\uFF0C\u5224\u65AD<code>target</code>\u51CF\u53BB\u5F53\u524D\u5143\u7D20\u7684\u5DEE\u662F\u5426\u5728<strong>\u54C8\u5E0C\u8868</strong><code>Map</code>\u627E\u5230\uFF0C\u5982\u679C\u627E\u5230\u5C31\u8FD4\u56DE\uFF0C\u53CD\u4E4B\u628A\u5F53\u524D\u5143\u7D20\u5B58\u50A8\u5230<code>Map</code>\u4E2D\uFF0C\u7EE7\u7EED\u904D\u5386\u3002</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span> <span class="token parameter">nums</span>
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token parameter">target</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span>
 */</span>
<span class="token keyword">var</span> <span class="token function-variable function">twoSum</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">nums<span class="token punctuation">,</span> target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> n <span class="token operator">=</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> num_map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> num <span class="token operator">=</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> temp <span class="token operator">=</span> target <span class="token operator">-</span> num<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>num_map<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>temp<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>num_map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>temp<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    num_map<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>num<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,15);function m(v,b){const a=u("ExternalLinkIcon");return t(),e("div",null,[i,n("p",null,[n("a",r,[k,o(a)])]),d])}var f=p(l,[["render",m],["__file","1.two-sum.html.vue"]]);export{f as default};
